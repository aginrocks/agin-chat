/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as WelcomeImport } from './routes/welcome'
import { Route as AppRouteImport } from './routes/app/route'
import { Route as IndexImport } from './routes/index'
import { Route as AppRoomsRouteImport } from './routes/app/rooms/route'
import { Route as AppDirectRouteImport } from './routes/app/direct/route'
import { Route as AppRoomsIndexImport } from './routes/app/rooms/index'
import { Route as AppDirectIndexImport } from './routes/app/direct/index'
import { Route as AppRoomsRoomIdImport } from './routes/app/rooms/$roomId'

// Create/Update Routes

const WelcomeRoute = WelcomeImport.update({
  id: '/welcome',
  path: '/welcome',
  getParentRoute: () => rootRoute,
} as any)

const AppRouteRoute = AppRouteImport.update({
  id: '/app',
  path: '/app',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AppRoomsRouteRoute = AppRoomsRouteImport.update({
  id: '/rooms',
  path: '/rooms',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppDirectRouteRoute = AppDirectRouteImport.update({
  id: '/direct',
  path: '/direct',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppRoomsIndexRoute = AppRoomsIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppRoomsRouteRoute,
} as any)

const AppDirectIndexRoute = AppDirectIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppDirectRouteRoute,
} as any)

const AppRoomsRoomIdRoute = AppRoomsRoomIdImport.update({
  id: '/$roomId',
  path: '/$roomId',
  getParentRoute: () => AppRoomsRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/app': {
      id: '/app'
      path: '/app'
      fullPath: '/app'
      preLoaderRoute: typeof AppRouteImport
      parentRoute: typeof rootRoute
    }
    '/welcome': {
      id: '/welcome'
      path: '/welcome'
      fullPath: '/welcome'
      preLoaderRoute: typeof WelcomeImport
      parentRoute: typeof rootRoute
    }
    '/app/direct': {
      id: '/app/direct'
      path: '/direct'
      fullPath: '/app/direct'
      preLoaderRoute: typeof AppDirectRouteImport
      parentRoute: typeof AppRouteImport
    }
    '/app/rooms': {
      id: '/app/rooms'
      path: '/rooms'
      fullPath: '/app/rooms'
      preLoaderRoute: typeof AppRoomsRouteImport
      parentRoute: typeof AppRouteImport
    }
    '/app/rooms/$roomId': {
      id: '/app/rooms/$roomId'
      path: '/$roomId'
      fullPath: '/app/rooms/$roomId'
      preLoaderRoute: typeof AppRoomsRoomIdImport
      parentRoute: typeof AppRoomsRouteImport
    }
    '/app/direct/': {
      id: '/app/direct/'
      path: '/'
      fullPath: '/app/direct/'
      preLoaderRoute: typeof AppDirectIndexImport
      parentRoute: typeof AppDirectRouteImport
    }
    '/app/rooms/': {
      id: '/app/rooms/'
      path: '/'
      fullPath: '/app/rooms/'
      preLoaderRoute: typeof AppRoomsIndexImport
      parentRoute: typeof AppRoomsRouteImport
    }
  }
}

// Create and export the route tree

interface AppDirectRouteRouteChildren {
  AppDirectIndexRoute: typeof AppDirectIndexRoute
}

const AppDirectRouteRouteChildren: AppDirectRouteRouteChildren = {
  AppDirectIndexRoute: AppDirectIndexRoute,
}

const AppDirectRouteRouteWithChildren = AppDirectRouteRoute._addFileChildren(
  AppDirectRouteRouteChildren,
)

interface AppRoomsRouteRouteChildren {
  AppRoomsRoomIdRoute: typeof AppRoomsRoomIdRoute
  AppRoomsIndexRoute: typeof AppRoomsIndexRoute
}

const AppRoomsRouteRouteChildren: AppRoomsRouteRouteChildren = {
  AppRoomsRoomIdRoute: AppRoomsRoomIdRoute,
  AppRoomsIndexRoute: AppRoomsIndexRoute,
}

const AppRoomsRouteRouteWithChildren = AppRoomsRouteRoute._addFileChildren(
  AppRoomsRouteRouteChildren,
)

interface AppRouteRouteChildren {
  AppDirectRouteRoute: typeof AppDirectRouteRouteWithChildren
  AppRoomsRouteRoute: typeof AppRoomsRouteRouteWithChildren
}

const AppRouteRouteChildren: AppRouteRouteChildren = {
  AppDirectRouteRoute: AppDirectRouteRouteWithChildren,
  AppRoomsRouteRoute: AppRoomsRouteRouteWithChildren,
}

const AppRouteRouteWithChildren = AppRouteRoute._addFileChildren(
  AppRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/app': typeof AppRouteRouteWithChildren
  '/welcome': typeof WelcomeRoute
  '/app/direct': typeof AppDirectRouteRouteWithChildren
  '/app/rooms': typeof AppRoomsRouteRouteWithChildren
  '/app/rooms/$roomId': typeof AppRoomsRoomIdRoute
  '/app/direct/': typeof AppDirectIndexRoute
  '/app/rooms/': typeof AppRoomsIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/app': typeof AppRouteRouteWithChildren
  '/welcome': typeof WelcomeRoute
  '/app/rooms/$roomId': typeof AppRoomsRoomIdRoute
  '/app/direct': typeof AppDirectIndexRoute
  '/app/rooms': typeof AppRoomsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/app': typeof AppRouteRouteWithChildren
  '/welcome': typeof WelcomeRoute
  '/app/direct': typeof AppDirectRouteRouteWithChildren
  '/app/rooms': typeof AppRoomsRouteRouteWithChildren
  '/app/rooms/$roomId': typeof AppRoomsRoomIdRoute
  '/app/direct/': typeof AppDirectIndexRoute
  '/app/rooms/': typeof AppRoomsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/app'
    | '/welcome'
    | '/app/direct'
    | '/app/rooms'
    | '/app/rooms/$roomId'
    | '/app/direct/'
    | '/app/rooms/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/app'
    | '/welcome'
    | '/app/rooms/$roomId'
    | '/app/direct'
    | '/app/rooms'
  id:
    | '__root__'
    | '/'
    | '/app'
    | '/welcome'
    | '/app/direct'
    | '/app/rooms'
    | '/app/rooms/$roomId'
    | '/app/direct/'
    | '/app/rooms/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AppRouteRoute: typeof AppRouteRouteWithChildren
  WelcomeRoute: typeof WelcomeRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AppRouteRoute: AppRouteRouteWithChildren,
  WelcomeRoute: WelcomeRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/app",
        "/welcome"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/app": {
      "filePath": "app/route.tsx",
      "children": [
        "/app/direct",
        "/app/rooms"
      ]
    },
    "/welcome": {
      "filePath": "welcome.tsx"
    },
    "/app/direct": {
      "filePath": "app/direct/route.tsx",
      "parent": "/app",
      "children": [
        "/app/direct/"
      ]
    },
    "/app/rooms": {
      "filePath": "app/rooms/route.tsx",
      "parent": "/app",
      "children": [
        "/app/rooms/$roomId",
        "/app/rooms/"
      ]
    },
    "/app/rooms/$roomId": {
      "filePath": "app/rooms/$roomId.tsx",
      "parent": "/app/rooms"
    },
    "/app/direct/": {
      "filePath": "app/direct/index.tsx",
      "parent": "/app/direct"
    },
    "/app/rooms/": {
      "filePath": "app/rooms/index.tsx",
      "parent": "/app/rooms"
    }
  }
}
ROUTE_MANIFEST_END */
